{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadDiskFileSynchronously"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Set this options will stop that flickering by keeping all loading in the same queue (typically the UI queue"},{"type":"text","text":" "},{"type":"text","text":"if you are using SYMoyaNetwork’s extension methods to set an response), with a tradeoff of loading performance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/symoyanetwork\/symoyanetworkoptionsinfoitem\/loaddiskfilesynchronously"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.shannonyang.SYMoyaNetwork\/documentation\/SYMoyaNetwork\/SYMoyaNetworkOptionsInfoItem\/loadDiskFileSynchronously","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"If set, the disk storage loading will happen in the same calling queue. By default, disk storage file loading"},{"type":"text","text":" "},{"type":"text","text":"happens in its own queue with an asynchronous dispatch behavior. Although it provides better non-blocking disk"},{"type":"text","text":" "},{"type":"text","text":"loading performance, it also causes a flickering when you reload an response from disk, if the response view already"},{"type":"text","text":" "},{"type":"text","text":"has an response set."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadDiskFileSynchronously"}],"title":"SYMoyaNetworkOptionsInfoItem.loadDiskFileSynchronously","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:13SYMoyaNetwork0aB15OptionsInfoItemO25loadDiskFileSynchronouslyyA2CmF","modules":[{"name":"SYMoyaNetwork"}]},"hierarchy":{"paths":[["doc:\/\/com.shannonyang.SYMoyaNetwork\/documentation\/SYMoyaNetwork","doc:\/\/com.shannonyang.SYMoyaNetwork\/documentation\/SYMoyaNetwork\/SYMoyaNetworkOptionsInfoItem"]]},"references":{"doc://com.shannonyang.SYMoyaNetwork/documentation/SYMoyaNetwork/SYMoyaNetworkOptionsInfoItem/loadDiskFileSynchronously":{"role":"symbol","title":"SYMoyaNetworkOptionsInfoItem.loadDiskFileSynchronously","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadDiskFileSynchronously"}],"abstract":[{"type":"text","text":"If set, the disk storage loading will happen in the same calling queue. By default, disk storage file loading"},{"type":"text","text":" "},{"type":"text","text":"happens in its own queue with an asynchronous dispatch behavior. Although it provides better non-blocking disk"},{"type":"text","text":" "},{"type":"text","text":"loading performance, it also causes a flickering when you reload an response from disk, if the response view already"},{"type":"text","text":" "},{"type":"text","text":"has an response set."}],"identifier":"doc:\/\/com.shannonyang.SYMoyaNetwork\/documentation\/SYMoyaNetwork\/SYMoyaNetworkOptionsInfoItem\/loadDiskFileSynchronously","kind":"symbol","type":"topic","url":"\/documentation\/symoyanetwork\/symoyanetworkoptionsinfoitem\/loaddiskfilesynchronously"},"doc://com.shannonyang.SYMoyaNetwork/documentation/SYMoyaNetwork/SYMoyaNetworkOptionsInfoItem":{"role":"symbol","title":"SYMoyaNetworkOptionsInfoItem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SYMoyaNetworkOptionsInfoItem"}],"abstract":[{"type":"text","text":"Represents the available option items could be used in "},{"type":"codeVoice","code":"SYMoyaNetworkOptionsInfo"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.shannonyang.SYMoyaNetwork\/documentation\/SYMoyaNetwork\/SYMoyaNetworkOptionsInfoItem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SYMoyaNetworkOptionsInfoItem"}],"url":"\/documentation\/symoyanetwork\/symoyanetworkoptionsinfoitem"},"doc://com.shannonyang.SYMoyaNetwork/documentation/SYMoyaNetwork":{"role":"collection","title":"SYMoyaNetwork","abstract":[{"type":"text","text":"Based on the network abstraction of secondary encapsulation of "},{"type":"codeVoice","code":"Moya"},{"type":"text","text":". Maintain the same usage method of "},{"type":"codeVoice","code":"Moya"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"TargetType"},{"type":"text","text":" implements commonly used data parsing, supporting: "},{"type":"codeVoice","code":"HandyJSON"},{"type":"text","text":","},{"type":"codeVoice","code":"ObjectMapper"},{"type":"text","text":", "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", "},{"type":"codeVoice","code":"SwiftyJSON"},{"type":"text","text":", Developer there is no need to write boilerplate code for data parsing. You only need to care about what kind of data you want and select the data type. "},{"type":"codeVoice","code":"SYMoyaNetwork"},{"type":"text","text":" has done all this. "},{"type":"codeVoice","code":"SYMoyaNetwork"},{"type":"text","text":" also implements network caching, and configure common caching strategies to only implement the desired caching strategy. "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" will perform cache synchronization according to the policy. Developers no longer need to spend a lot of time doing such work. "},{"type":"codeVoice","code":"SYMoyaNetwork"},{"type":"text","text":" allows data requests Become simple, less developers write boilerplate code, more time to focus on business."}],"identifier":"doc:\/\/com.shannonyang.SYMoyaNetwork\/documentation\/SYMoyaNetwork","kind":"symbol","type":"topic","url":"\/documentation\/symoyanetwork"}}}